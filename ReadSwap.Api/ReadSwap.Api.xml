<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ReadSwap.Api</name>
    </assembly>
    <members>
        <member name="M:ReadSwap.Api.Controllers.AuthController.CheckEmailExists(ReadSwap.Core.ApiModels.CheckEmailApiModel.Request)">
            <summary>
            Chech if the passed email is already registered
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ReadSwap.Api.Controllers.AuthController.SignUp(ReadSwap.Core.ApiModels.SignUpApiModel.Request)">
            <summary>
            Create a new Account
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ReadSwap.Api.Controllers.AuthController.SignIn(ReadSwap.Core.ApiModels.SignInApiModel.Request)">
            <summary>
            Signing in to the account and aqcuaring the token
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ReadSwap.Api.Controllers.AuthController.ChangePassword(ReadSwap.Core.ApiModels.ChangePasswordApiModel.Request)">
            <summary>
            Changing the password of the current user
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:ReadSwap.Api.Controllers.AuthController.checkEmail(System.String)">
            <summary>
            Check if the email already registered
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:ReadSwap.Api.Controllers.BookController.AddBook(ReadSwap.Core.ApiModels.AddBookApiModel.Request)">
            <summary>
            Adding book to this user collection
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:ReadSwap.Api.Controllers.BookController.UpdateBook(ReadSwap.Core.ApiModels.UpdateBookApiModel.Request)">
            <summary>
            Adding book to this user collection
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:ReadSwap.Api.Controllers.BookController.DeleteBook(System.Int32)">
            <summary>
            Add Image to the collection of a book images
            </summary>
            <param name="bookId"></param>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:ReadSwap.Api.Controllers.BookController.GetMyBooks">
            <summary>
            Add Image to the collection of a book images
            </summary>
            <param name="bookId"></param>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:ReadSwap.Api.Controllers.BookController.GetBookById(System.Int32)">
            <summary>
            Add Image to the collection of a book images
            </summary>
            <param name="bookId"></param>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:ReadSwap.Api.Controllers.BookController.SearchBookByTitle(System.String)">
            <summary>
            Add Image to the collection of a book images
            </summary>
            <param name="bookId"></param>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:ReadSwap.Api.Controllers.BookController.AddBookImage(System.Int32,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Add Image to the collection of a book images
            </summary>
            <param name="bookId"></param>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:ReadSwap.Api.Controllers.BookController.ChangeBookCover(ReadSwap.Core.ApiModels.ChangeBookCoverApiModel.Request)">
            <summary>
            Add Image to the collection of a book images
            </summary>
            <param name="bookId"></param>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:ReadSwap.Api.Controllers.BookController.DeleteBookImage(System.Int32)">
            <summary>
            Add Image to the collection of a book images
            </summary>
            <param name="bookId"></param>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="T:ReadSwap.Api.Controllers.ProfileController">
            <summary>
            To manage the user profile
            </summary>
        </member>
        <member name="M:ReadSwap.Api.Controllers.ProfileController.CreateMyProfile(ReadSwap.Core.ApiModels.CreateProfileApiModel.Request)">
            <summary>
            Creating the user Profile
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:ReadSwap.Api.Controllers.ProfileController.GetMyProfile">
            <summary>
            Get the profile of the current logged in user
            </summary>
            <returns></returns>
        </member>
        <member name="M:ReadSwap.Api.Controllers.ProfileController.EditMyProfile(ReadSwap.Core.ApiModels.EditProfileApiModel.Request)">
            <summary>
            Edit the profile of the currently logged in user
            </summary>
            <returns></returns>
        </member>
        <member name="M:ReadSwap.Api.Controllers.ProfileController.GetProfile(System.Int32)">
            <summary>
            Get the profile which have the passed id
            </summary>
            <returns></returns>
        </member>
        <member name="M:ReadSwap.Api.Controllers.ProfileController.GetProfileByUserId(System.String)">
            <summary>
            Get the profile which is realted to the user of the passed id
            </summary>
            <returns></returns>
        </member>
        <member name="M:ReadSwap.Api.Controllers.TokenController.Refresh(ReadSwap.Core.ApiModels.TokenApiModel.Request)">
            <summary>
            Issue a new access token
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:ReadSwap.Api.Controllers.TokenController.Revoke">
            <summary>
            Delete the current refresh token of the current user
            </summary>
            <returns></returns>
        </member>
        <member name="M:ReadSwap.Api.Helpers.UserHelper.GetClaimsAsync(ReadSwap.Core.Entities.AppUser,Microsoft.AspNetCore.Identity.UserManager{ReadSwap.Core.Entities.AppUser})">
            <summary>
            Return the claims of the passed user to be used in token generation
            </summary>
            <param name="user"></param>
            <param name="userManager"></param>
            <returns></returns>
        </member>
    </members>
</doc>
